// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductService.Persistence.Contexts;

#nullable disable

namespace ProductService.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20240705114211_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UK_Categories_Name")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f5f0acc-727e-48b0-a7d9-ab69202bb835"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Computer"
                        },
                        new
                        {
                            Id = new Guid("c8df2d54-377f-4b10-8540-78e17a6c2418"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Phone"
                        });
                });

            modelBuilder.Entity("ProductService.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Name" }, "UK_Product_Name")
                        .IsUnique();

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee003206-5809-4bc9-8972-d91d2a8a7f59"),
                            CategoryId = new Guid("8f5f0acc-727e-48b0-a7d9-ab69202bb835"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LENOVO AIO 3 INTEL CORE İ5 12450H 3.3 GHZ 8 GB 512 GB",
                            Price = 16000m
                        },
                        new
                        {
                            Id = new Guid("32cbdcda-453c-4c43-9bbf-64f641309948"),
                            CategoryId = new Guid("8f5f0acc-727e-48b0-a7d9-ab69202bb835"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EXPER XERA XC136 INTEL CORE İ5 13400F 2.5GHZ 16GB",
                            Price = 15000m
                        },
                        new
                        {
                            Id = new Guid("a2fb2a7c-7cae-4a6f-88bd-419fc61383c4"),
                            CategoryId = new Guid("8f5f0acc-727e-48b0-a7d9-ab69202bb835"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HP 898B7EA INTEL CORE İ5 1335U 3.4 GHZ 8 GB 512 GB",
                            Price = 16500m
                        },
                        new
                        {
                            Id = new Guid("b275118d-9788-418f-8a67-e097b8c1100a"),
                            CategoryId = new Guid("8f5f0acc-727e-48b0-a7d9-ab69202bb835"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EXPER DIAMOND DEX600 INTEL CORE İ5 11400 2.6GHZ 8GB 256GB SSD INTEL UHD730",
                            Price = 35000m
                        },
                        new
                        {
                            Id = new Guid("bd7714a0-0a16-4674-a95b-58e9e7ad3979"),
                            CategoryId = new Guid("8f5f0acc-727e-48b0-a7d9-ab69202bb835"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CASPER Excalibur E650 İ5 12400F 2.5GHZ 32GB 500GB",
                            Price = 15400m
                        },
                        new
                        {
                            Id = new Guid("2b7f8b22-176b-42b6-8218-a18a9df2a28d"),
                            CategoryId = new Guid("c8df2d54-377f-4b10-8540-78e17a6c2418"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPhone 13 128 Gb Akıllı Telefon Mavi",
                            Price = 25000m
                        },
                        new
                        {
                            Id = new Guid("659f84b4-7299-42b4-8818-e413b6816a88"),
                            CategoryId = new Guid("c8df2d54-377f-4b10-8540-78e17a6c2418"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPhone 13 128 Gb Akıllı Telefon Yıldız Işığı",
                            Price = 12000m
                        },
                        new
                        {
                            Id = new Guid("fae057c3-4ea0-44c8-9fa2-038525cb8eb1"),
                            CategoryId = new Guid("c8df2d54-377f-4b10-8540-78e17a6c2418"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung Galaxy A15 6/128 Gb Akıllı Telefon Siyah",
                            Price = 35000m
                        },
                        new
                        {
                            Id = new Guid("d2c968b9-80ec-4c8d-a4df-f4a43ae2832c"),
                            CategoryId = new Guid("c8df2d54-377f-4b10-8540-78e17a6c2418"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi Redmi 12 8/128 GB Gece Yarısı Siyahı Akıllı Telefon",
                            Price = 25400m
                        });
                });

            modelBuilder.Entity("ProductService.Domain.Product", b =>
                {
                    b.HasOne("ProductService.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductService.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
